// AST
digraph {
	rankdir=TB
	136095828082752 [label="root: <function_recursive>"]
	136095828082816 [label="rule: <function_recursive>"]
	136095828082752 -> 136095828082816
	136095828082880 [label="terminal: int"]
	136095828082816 -> 136095828082880
	136095828083008 [label="rule: <function_name>"]
	136095828082816 -> 136095828083008
	136095828083072 [label="terminal: thetaFunc"]
	136095828083008 -> 136095828083072
	136095828083200 [label="terminal: ("]
	136095828082816 -> 136095828083200
	136095828083264 [label="terminal: int"]
	136095828082816 -> 136095828083264
	136095828083328 [label="terminal: num,"]
	136095828082816 -> 136095828083328
	136095828083392 [label="terminal: int"]
	136095828082816 -> 136095828083392
	136095828083456 [label="terminal: index"]
	136095828082816 -> 136095828083456
	136095828082944 [label="terminal: ){"]
	136095828082816 -> 136095828082944
	136095828083520 [label="rule: <statement>"]
	136095828082816 -> 136095828083520
	136095828083584 [label="rule: <for_loop>"]
	136095828083520 -> 136095828083584
	136095828083648 [label="terminal: for"]
	136095828083584 -> 136095828083648
	136095828083776 [label="terminal: ("]
	136095828083584 -> 136095828083776
	136095828083840 [label="rule: <for_loop_initialization>"]
	136095828083584 -> 136095828083840
	136095828083904 [label="rule: <for_loop_data_type>"]
	136095828083840 -> 136095828083904
	136095828083968 [label="terminal: int"]
	136095828083904 -> 136095828083968
	136095828084160 [label="rule: <for_loop_identifier>"]
	136095828083840 -> 136095828084160
	136095828084224 [label="terminal: i"]
	136095828084160 -> 136095828084224
	136095828084352 [label="terminal: ="]
	136095828083840 -> 136095828084352
	136095828084416 [label="rule: <for_loop_value>"]
	136095828083840 -> 136095828084416
	136095828084480 [label="terminal: 5"]
	136095828084416 -> 136095828084480
	136095828084608 [label="terminal: ;"]
	136095828083840 -> 136095828084608
	136095828084672 [label="rule: <for_loop_condition>"]
	136095828083584 -> 136095828084672
	136095828084736 [label="rule: <for_loop_condition_greater_than_or_equal>"]
	136095828084672 -> 136095828084736
	136095828084800 [label="terminal: i>="]
	136095828084736 -> 136095828084800
	136095828084928 [label="rule: <for_loop_value>"]
	136095828084736 -> 136095828084928
	136095828084992 [label="terminal: 15"]
	136095828084928 -> 136095828084992
	136095828085120 [label="terminal: ;"]
	136095828084736 -> 136095828085120
	136095828085248 [label="rule: <for_loop_update>"]
	136095828083584 -> 136095828085248
	136095828085312 [label="rule: <for_loop_identifier>"]
	136095828085248 -> 136095828085312
	136095828085376 [label="terminal: i"]
	136095828085312 -> 136095828085376
	136095828085568 [label="terminal: ++"]
	136095828085248 -> 136095828085568
	136095828085632 [label="terminal: ){"]
	136095828083584 -> 136095828085632
	136095828085696 [label="rule: <for_loop_body>"]
	136095828083584 -> 136095828085696
	136095828085760 [label="rule: <array>"]
	136095828085696 -> 136095828085760
	136095828085824 [label="rule: <data_type>"]
	136095828085760 -> 136095828085824
	136095828085888 [label="terminal: double"]
	136095828085824 -> 136095828085888
	136095828086080 [label="rule: <identifier>"]
	136095828085760 -> 136095828086080
	136095828086144 [label="terminal: omegaTau"]
	136095828086080 -> 136095828086144
	136095828086272 [label="terminal: ["]
	136095828085760 -> 136095828086272
	136095828086336 [label="rule: <array_size>"]
	136095828085760 -> 136095828086336
	136095828086400 [label="terminal: 20"]
	136095828086336 -> 136095828086400
	136095828086528 [label="terminal: ]"]
	136095828085760 -> 136095828086528
	136095828086592 [label="terminal: ="]
	136095828085760 -> 136095828086592
	136095828086656 [label="rule: <array_values>"]
	136095828085760 -> 136095828086656
	136095828086720 [label="terminal: {6.0,1.0,88.47840167613512,5.0,19.0,16.0,5.0,9.0,3.0,5.0,2.0,10.0,14.0,19.0,14.0,15.0,5.0,16.0,13.0,10.0}"]
	136095828086656 -> 136095828086720
	136095828086848 [label="terminal: ;"]
	136095828086656 -> 136095828086848
	136095828083712 [label="terminal: }"]
	136095828083584 -> 136095828083712
	136095828086976 [label="terminal: if"]
	136095828082816 -> 136095828086976
	136095828087040 [label="terminal: (index"]
	136095828082816 -> 136095828087040
	136095828087104 [label="terminal: >="]
	136095828082816 -> 136095828087104
	136095828087168 [label="terminal: 5)"]
	136095828082816 -> 136095828087168
	136095828087232 [label="terminal: {"]
	136095828082816 -> 136095828087232
	136095828087296 [label="terminal: return"]
	136095828082816 -> 136095828087296
	136095828087360 [label="terminal: num;"]
	136095828082816 -> 136095828087360
	136095828087424 [label="terminal: }"]
	136095828082816 -> 136095828087424
	136095828087488 [label="terminal: return"]
	136095828082816 -> 136095828087488
	136095828087552 [label="rule: <function_name>"]
	136095828082816 -> 136095828087552
	136095828087616 [label="terminal: thetaFunc"]
	136095828087552 -> 136095828087616
	136095828087744 [label="terminal: (num,index-1);}"]
	136095828082816 -> 136095828087744
}
