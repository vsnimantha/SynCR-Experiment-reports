// AST
digraph {
	rankdir=TB
	132919850728960 [label="root: <function_recursive>"]
	132919850729024 [label="rule: <function_recursive>"]
	132919850728960 -> 132919850729024
	132919850729088 [label="terminal: int"]
	132919850729024 -> 132919850729088
	132919850729216 [label="rule: <function_name>"]
	132919850729024 -> 132919850729216
	132919850729280 [label="terminal: thetaFunc"]
	132919850729216 -> 132919850729280
	132919850729408 [label="terminal: ("]
	132919850729024 -> 132919850729408
	132919848665152 [label="terminal: int"]
	132919850729024 -> 132919848665152
	132919848665216 [label="terminal: num,"]
	132919850729024 -> 132919848665216
	132919848665280 [label="terminal: int"]
	132919850729024 -> 132919848665280
	132919848665344 [label="terminal: index"]
	132919850729024 -> 132919848665344
	132919850729152 [label="terminal: ){"]
	132919850729024 -> 132919850729152
	132919848665408 [label="rule: <statement>"]
	132919850729024 -> 132919848665408
	132919848665472 [label="rule: <while_loop>"]
	132919848665408 -> 132919848665472
	132919848665536 [label="terminal: while"]
	132919848665472 -> 132919848665536
	132919848665664 [label="terminal: ("]
	132919848665472 -> 132919848665664
	132919848665728 [label="rule: <boolean_literal>"]
	132919848665472 -> 132919848665728
	132919848665792 [label="terminal: false"]
	132919848665728 -> 132919848665792
	132919848665920 [label="terminal: )"]
	132919848665472 -> 132919848665920
	132919848665984 [label="terminal: {"]
	132919848665472 -> 132919848665984
	132919848666048 [label="rule: <while_loop_body>"]
	132919848665472 -> 132919848666048
	132919848666112 [label="rule: <array>"]
	132919848666048 -> 132919848666112
	132919848666176 [label="rule: <data_type>"]
	132919848666112 -> 132919848666176
	132919848666240 [label="terminal: float"]
	132919848666176 -> 132919848666240
	132919848666432 [label="rule: <identifier>"]
	132919848666112 -> 132919848666432
	132919848666496 [label="terminal: lambdaPhi"]
	132919848666432 -> 132919848666496
	132919848666624 [label="terminal: ["]
	132919848666112 -> 132919848666624
	132919848666688 [label="rule: <array_size>"]
	132919848666112 -> 132919848666688
	132919848666752 [label="terminal: 8"]
	132919848666688 -> 132919848666752
	132919848666880 [label="terminal: ]"]
	132919848666112 -> 132919848666880
	132919848666944 [label="terminal: ="]
	132919848666112 -> 132919848666944
	132919848667008 [label="rule: <array_values>"]
	132919848666112 -> 132919848667008
	132919848667072 [label="terminal: {2.0f,7.0f,89.05829797782887f,20.0f,19.0f,8.0f,20.0f,6.0f}"]
	132919848667008 -> 132919848667072
	132919848667200 [label="terminal: ;"]
	132919848667008 -> 132919848667200
	132919848667264 [label="terminal: }"]
	132919848665472 -> 132919848667264
	132919848667328 [label="terminal: if"]
	132919850729024 -> 132919848667328
	132919848667392 [label="terminal: (index"]
	132919850729024 -> 132919848667392
	132919848667456 [label="terminal: >="]
	132919850729024 -> 132919848667456
	132919848667520 [label="terminal: 5)"]
	132919850729024 -> 132919848667520
	132919848667584 [label="terminal: {"]
	132919850729024 -> 132919848667584
	132919848667648 [label="terminal: return"]
	132919850729024 -> 132919848667648
	132919848667712 [label="terminal: num;"]
	132919850729024 -> 132919848667712
	132919848667776 [label="terminal: }"]
	132919850729024 -> 132919848667776
	132919848667840 [label="terminal: return"]
	132919850729024 -> 132919848667840
	132919848667904 [label="rule: <function_name>"]
	132919850729024 -> 132919848667904
	132919848667968 [label="terminal: thetaFunc"]
	132919848667904 -> 132919848667968
	132919848668096 [label="terminal: (num,index-1);}"]
	132919850729024 -> 132919848668096
}
