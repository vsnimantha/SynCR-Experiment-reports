// AST
digraph {
	rankdir=TB
	137624049130112 [label="root: <if_statement>"]
	137624049130944 [label="rule: <if_statement>"]
	137624049130112 -> 137624049130944
	137624049131264 [label="terminal: if"]
	137624049130944 -> 137624049131264
	137624049131136 [label="terminal: ("]
	137624049130944 -> 137624049131136
	137624049131328 [label="rule: <boolean_literal>"]
	137624049130944 -> 137624049131328
	137624049131392 [label="terminal: true"]
	137624049131328 -> 137624049131392
	137624049131904 [label="terminal: )"]
	137624049130944 -> 137624049131904
	137624049131968 [label="terminal: {"]
	137624049130944 -> 137624049131968
	137624049131776 [label="rule: <statement>"]
	137624049130944 -> 137624049131776
	137624049131520 [label="rule: <while_loop>"]
	137624049131776 -> 137624049131520
	137624049131840 [label="terminal: while"]
	137624049131520 -> 137624049131840
	137624049131712 [label="terminal: ("]
	137624049131520 -> 137624049131712
	137624049131008 [label="rule: <boolean_literal>"]
	137624049131520 -> 137624049131008
	137624049132032 [label="terminal: false"]
	137624049131008 -> 137624049132032
	137624049132096 [label="terminal: )"]
	137624049131520 -> 137624049132096
	137624049132416 [label="terminal: {"]
	137624049131520 -> 137624049132416
	137624049128768 [label="rule: <while_loop_body>"]
	137624049131520 -> 137624049128768
	137624049132288 [label="rule: <print_statement>"]
	137624049128768 -> 137624049132288
	137624049132352 [label="terminal: printf("]
	137624049132288 -> 137624049132352
	137624049132544 [label="rule: <message>"]
	137624049132288 -> 137624049132544
	137624049132672 [label="rule: <rand_messages>"]
	137624049132544 -> 137624049132672
	137624049132736 [label="terminal: \"Security check passed\""]
	137624049132672 -> 137624049132736
	137624049132800 [label="terminal: );"]
	137624049132288 -> 137624049132800
	137624049132864 [label="terminal: }"]
	137624049131520 -> 137624049132864
	137624049132992 [label="terminal: }"]
	137624049130944 -> 137624049132992
	137624049131200 [label="terminal: else"]
	137624049130944 -> 137624049131200
	137624049133056 [label="terminal: {"]
	137624049130944 -> 137624049133056
	137624049132928 [label="rule: <statement>"]
	137624049130944 -> 137624049132928
	137624049133120 [label="rule: <while_loop>"]
	137624049132928 -> 137624049133120
	137624049133184 [label="terminal: while"]
	137624049133120 -> 137624049133184
	137624049133504 [label="terminal: ("]
	137624049133120 -> 137624049133504
	137624049133440 [label="rule: <boolean_literal>"]
	137624049133120 -> 137624049133440
	137624049133568 [label="terminal: true"]
	137624049133440 -> 137624049133568
	137624049133760 [label="terminal: )"]
	137624049133120 -> 137624049133760
	137624049133312 [label="terminal: {"]
	137624049133120 -> 137624049133312
	137624049133632 [label="rule: <while_loop_body>"]
	137624049133120 -> 137624049133632
	137624049133824 [label="rule: <print_statement>"]
	137624049133632 -> 137624049133824
	137624049133248 [label="terminal: printf("]
	137624049133824 -> 137624049133248
	137624049134016 [label="rule: <message>"]
	137624049133824 -> 137624049134016
	137624049134080 [label="rule: <rand_messages>"]
	137624049134016 -> 137624049134080
	137624049133952 [label="terminal: \"Exiting function\""]
	137624049134080 -> 137624049133952
	137624049131072 [label="terminal: );"]
	137624049133824 -> 137624049131072
	137624049130560 [label="terminal: }"]
	137624049133120 -> 137624049130560
	137624049134272 [label="terminal: }"]
	137624049130944 -> 137624049134272
}
